{
  "accessPolicy": {},
  "name": "bichard_process",
  "description": "The main processing workflow for Bichard",
  "version": 1,
  "tasks": [
    {
      "name": "Process Until No Exceptions",
      "taskReferenceName": "loop_process_phase_1",
      "type": "DO_WHILE",
      "loopCondition": "$.process_phase1['resultType'] === 'exceptions'",
      "loopOver": [
        {
          "name": "process_phase1",
          "taskReferenceName": "process_phase1",
          "inputParameters": {
            "s3TaskDataPath": "${workflow.input.s3TaskDataPath}"
          },
          "type": "SIMPLE",
          "startDelay": 0,
          "optional": false,
          "asyncComplete": false
        },
        {
          "name": "persist_phase1",
          "taskReferenceName": "persist_phase1",
          "inputParameters": {
            "s3TaskDataPath": "${workflow.input.s3TaskDataPath}"
          },
          "type": "SIMPLE",
          "startDelay": 0,
          "optional": false,
          "asyncComplete": false
        },
        {
          "name": "store_audit_log_events",
          "taskReferenceName": "store_audit_log_events",
          "inputParameters": {
            "correlationId": "${workflow.correlationId}",
            "auditLogEvents": "${process_phase1.output.auditLogEvents}"
          },
          "type": "SIMPLE",
          "startDelay": 0,
          "optional": false,
          "asyncComplete": false
        },
        {
          "name": "check_phase1_result",
          "taskReferenceName": "check_phase1_result",
          "inputParameters": {
            "switchCaseValue": "${process_phase1.output.resultType}"
          },
          "type": "SWITCH",
          "decisionCases": {
            "exceptions": [
              {
                "name": "wait_for_resubmission",
                "taskReferenceName": "wait_for_resubmission",
                "inputParameters": {},
                "type": "HUMAN",
                "startDelay": 0,
                "optional": false,
                "asyncComplete": false
              },
              {
                "name": "is_manually_resolved",
                "taskReferenceName": "is_manually_resolved",
                "inputParameters": {
                  "isManuallyResolved": "${wait_for_resubmission.output.isManuallyResolved}"
                },
                "type": "SWITCH",
                "decisionCases": {
                  "true": [
                    {
                      "name": "delete_s3_file",
                      "taskReferenceName": "delete_temp_file_manually_resolved",
                      "inputParameters": {
                        "bucketId": "task-data",
                        "fileName": "${workflow.input.s3TaskDataPath}"
                      },
                      "type": "SIMPLE",
                      "startDelay": 0,
                      "optional": false,
                      "asyncComplete": false
                    },
                    {
                      "name": "manually_resolved",
                      "taskReferenceName": "manually_resolved",
                      "inputParameters": {
                        "terminationStatus": "COMPLETED"
                      },
                      "type": "TERMINATE",
                      "startDelay": 0,
                      "optional": false,
                      "asyncComplete": false
                    }
                  ]
                },
                "startDelay": 0,
                "optional": false,
                "asyncComplete": false,
                "evaluatorType": "value-param",
                "expression": "isManuallyResolved"
              },
              {
                "name": "read_aho_from_db",
                "taskReferenceName": "read_aho_from_db",
                "inputParameters": {
                  "correlationId": "${workflow.correlationId}",
                  "s3TaskDataPath": "${workflow.input.s3TaskDataPath}"
                },
                "type": "SIMPLE",
                "startDelay": 0,
                "optional": false,
                "asyncComplete": false
              }
            ],
            "end_processing": [
              {
                "name": "store_audit_log_events",
                "taskReferenceName": "store_audit_log_events_terminated",
                "inputParameters": {
                  "correlationId": "${workflow.correlationId}",
                  "auditLogEvents": "${send_to_phase2.output.auditLogEvents}"
                },
                "type": "SIMPLE",
                "startDelay": 0,
                "optional": false,
                "asyncComplete": false
              },
              {
                "name": "delete_s3_file",
                "taskReferenceName": "delete_temp_file_terminated",
                "inputParameters": {
                  "bucketId": "task-data",
                  "fileName": "${workflow.input.s3TaskDataPath}"
                },
                "type": "SIMPLE",
                "startDelay": 0,
                "optional": false,
                "asyncComplete": false
              },
              {
                "name": "end_processing",
                "taskReferenceName": "end_processing",
                "inputParameters": {
                  "terminationStatus": "COMPLETED"
                },
                "type": "TERMINATE",
                "startDelay": 0,
                "optional": false,
                "asyncComplete": false
              }
            ]
          },
          "startDelay": 0,
          "optional": false,
          "asyncComplete": false,
          "evaluatorType": "javascript",
          "expression": "$.switchCaseValue === 'ignored' || $.switchCaseValue === 'failure' ? 'end_processing' : $.switchCaseValue"
        }
      ]
    },
    {
      "name": "send_to_phase2",
      "taskReferenceName": "send_to_phase2",
      "inputParameters": {
        "s3TaskDataPath": "${workflow.input.s3TaskDataPath}"
      },
      "type": "SIMPLE",
      "startDelay": 0,
      "optional": false,
      "asyncComplete": false
    },
    {
      "name": "store_audit_log_events",
      "taskReferenceName": "record_send_to_phase2",
      "inputParameters": {
        "correlationId": "${workflow.correlationId}",
        "auditLogEvents": "${send_to_phase2.output.auditLogEvents}"
      },
      "type": "SIMPLE",
      "startDelay": 0,
      "optional": false,
      "asyncComplete": false
    },
    {
      "name": "delete_s3_file",
      "taskReferenceName": "delete_temp_file_complete",
      "inputParameters": {
        "bucketId": "task-data",
        "fileName": "${workflow.input.s3TaskDataPath}"
      },
      "type": "SIMPLE",
      "startDelay": 0,
      "optional": false,
      "asyncComplete": false
    }
  ],
  "inputParameters": ["s3TaskDataPath"],
  "outputParameters": {},
  "schemaVersion": 2,
  "restartable": true,
  "workflowStatusListenerEnabled": false,
  "timeoutPolicy": "ALERT_ONLY",
  "timeoutSeconds": 0,
  "variables": {},
  "inputTemplate": {}
}
