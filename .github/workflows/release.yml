name: Release
on:
  workflow_dispatch:

jobs:
  check-package-version-is-unused:
    name: Check package version is unused
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Capture local package version
        id: local_version
        run: echo "version=$(jq -r .version package.json | tr -d '\')" >> $GITHUB_OUTPUT

      - name: Capture published package version
        id: published_version
        run: echo "version=$(npm view @moj-bichard7-developers/bichard7-next-core version || echo 'unpublished')" >> $GITHUB_OUTPUT

      - name: Check package versions
        run: |
          echo "Local package version is ${{ steps.local_version.outputs.version }}"
          echo "Published package version is ${{ steps.published_version.outputs.version }}"

      - name: Fail if local version is the same as the published version
        if: ${{ steps.local_version.outputs.version == steps.published_version.outputs.version }}
        run: |
          echo "Local package version is the same as the published package version."
          echo "Aborting release, as this would overwrite published package."
          echo "Bump the version number in package.json and try again."
          exit 1

  release-npm-package:
    name: Release NPM package
    needs: check-package-version-is-unused
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.6.1
      - name: Install npm dependencies
        run: npm ci --ws

      - name: Build output package
        run: npm run build:package

      - name: Add registry config for npm
        run: echo "//registry.npmjs.org/:_authToken=\${NPM_TOKEN}" > .npmrc

      - name: Publish output package
        run: |
          cat ./package.json \
            | jq -r ".name = \"@moj-bichard7-developers/bichard7-next-core\" | \
              .scripts.postinstall = \"./scripts/post-install.sh\"" \
            | tee ./package.json
          npm publish --access=public
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
