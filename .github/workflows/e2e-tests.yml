name: Run e2e tests
run-name: Run e2e tests
on: push

jobs:
  install:
    runs-on: ubuntu-latest
    outputs:
      CORE_NODE_MODULES_CACHE_KEY: ${{ env.CORE_NODE_MODULES_CACHE_KEY }}
    steps:
      - uses: actions/checkout@main

      - name: Set Core node_modules cache key
        run: echo "CORE_NODE_MODULES_CACHE_KEY=core-npm-${{ hashFiles('./package-lock.json') }}" >> $GITHUB_ENV

      - name: Restore Core node_modules from cache
        id: restore_core_node_modules_from_cache
        uses: actions/cache/restore@v3
        with:
          path: ./node_modules
          key: ${{ env.CORE_NODE_MODULES_CACHE_KEY }}
          lookup-only: true

      - uses: actions/setup-node@v3
        with:
          node-version-file: ".nvmrc"

      - name: Install npm dependencies
        id: install_dependencies
        if: steps.restore_core_node_modules_from_cache.outputs.cache-hit != 'true'
        run: npm ci

      - name: Cache Core node_modules
        id: cache_core_node_modules
        uses: actions/cache/save@v3
        if: steps.restore_core_node_modules_from_cache.outputs.cache-hit != 'true'
        with:
          path: ./node_modules
          key: ${{ env.CORE_NODE_MODULES_CACHE_KEY }}

  e2e-tests:
    runs-on: ubuntu-latest
    needs: install
    environment: development
    env:
      AWS_DEFAULT_REGION: ${{ vars.AWS_DEFAULT_REGION }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      TOTAL_CHUNKS: 13
    strategy:
      matrix:
        chunk: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]
    steps:
      - uses: actions/checkout@main

      - name: Restore Core node_modules from cache
        id: restore_core_node_modules_from_cache
        uses: actions/cache/restore@v3
        with:
          path: ./node_modules
          key: ${{ needs.install.outputs.CORE_NODE_MODULES_CACHE_KEY }}
          fail-on-cache-miss: true

      - uses: actions/setup-node@v3
        with:
          node-version-file: ".nvmrc"

      - run: bash scripts/fetch-docker-image.sh beanconnect &
      - run: bash scripts/fetch-docker-image.sh pncemulator &
      - run: bash scripts/fetch-docker-image.sh bichard7-liberty &
      - run: bash scripts/fetch-docker-image.sh conductor &
      - run: bash scripts/fetch-docker-image.sh e2etests &
      - run: bash scripts/fetch-docker-image.sh nginx-auth-proxy &
      - run: bash scripts/fetch-docker-image.sh ui &
      - run: bash scripts/fetch-docker-image.sh user-service &

      - name: Wait for images
        run: bash scripts/wait-for-images.sh

      - name: Run the infrastructure
        id: run-infrastructure
        run: npm run all-no-worker

      - name: Run the worker
        id: run-worker
        run: npm run conductor-worker &

      - name: Run e2e tests against core code
        id: run-e2e-tests
        run: CHUNK_NUMBER=${{ matrix.chunk }} npm run test:e2e:ci
