{
  "configuration" : { },
  "description" : "Description",
  "documentation" : {
    "decisions" : [ {
      "content" : "# 1. Record architecture decisions\n\nDate: 2023-06-27\n\n## Status\n\nAccepted\n\n## Context\n\nWe need to record the architectural decisions made on this system.\n\n## Decision\n\nWe will use Architecture Decision Records, as [described by Michael Nygard](http://thinkrelevance.com/blog/2011/11/15/documenting-architecture-decisions).\n\n## Consequences\n\n- See Michael Nygard's article, linked above. For a lightweight ADR toolset, see Nat Pryce's [adr-tools](https://github.com/npryce/adr-tools).\n- Using [Structurizr](https://structurizr.com/)\n",
      "date" : "2023-06-27T00:00:00Z",
      "format" : "Markdown",
      "id" : "1",
      "status" : "Accepted",
      "title" : "Record architecture decisions"
    }, {
      "content" : "# 2. Use Data Transfer Objects\n\nDate: 2023-09-22\n\n## Status\n\nAccepted\n\n## Context\n\nUsing a Data Transfer Object (DTO) in the `bichard-next-ui` repo will help separate the User Interface (React) from\nthe Database objects. It will also allow to use TypeScript more effectively, enforcing stricter types on objects at\ncompile time.\n\nWe have chosen the naming convention of:\n\n- Types:\n  - `Display` - Prefix for the object to be consumed in the UI\n  - `DisplayPartial` - Prefix for the object which has limited fields\n  - `DisplayFull` - Prefix for the object which has all fields (that aren't a security risk)\n- File structure for DTOs\n  - `src/services/dto` top level\n  - Then for example: `objectDto.ts`\n- Which holds functions like:\n  - `objToDisplayObjDto`\n  - `objToDisplayPartialObjDto`\n\nA DTO object is a new object mirror with some of a Entity's attributes. We are actively using `Pick<T, \"field\">` to\nselect what we want to use out of the Entity and mapping via a function (e.g.\n`const displayObj = objToDisplayObjDto(obj)`).\n\nWe can control the levels of data we want share. E.g. `displayPartialObj` or `displayFullObj`.\n\n## Consequences\n\n- It's more complex than just using the Database Record\n- It's more secure than sending out raw database records into the UI\n- You have to be disciplined in it's use and following the architectural pattern\n",
      "date" : "2023-09-22T00:00:00Z",
      "format" : "Markdown",
      "id" : "2",
      "status" : "Accepted",
      "title" : "Use Data Transfer Objects"
    }, {
      "content" : "# 3. Use Styled Components\n\nDate: 2024-04-12\n\n## Status\n\nAccepted\n\n## Context\n\nWe are currently using two different styling libraries (3 if you include `scss` files). We want to reduce the need to\nknow how to use the libraries and simplify the code base.\n\nWe have opted to choose [Styled Components](https://styled-components.com/) over\n[React-JSS](https://cssinjs.org/react-jss/?v=v10.10.0)\n\nThe negatives for `react-jss` are it is less flexible with `React`. E.g. you can pass `props` to `styled-components`\nfor separate themes. It can also pollute other `components` as it based on class names rather than `components`.\n\n### File structure\n\nWe have opted to take the following approach to structuring the files:\n\n- `src/components/Action.styles.tsx`\n- `src/components/Action.tsx`\n\nThat allows to separate the styles from the `component` and keep close by. We can import other JS/TS files if needed,\ne.g. colours.\n\nWe should also export all the Styled Components at bottom of the file, e.g.\n\n```TypeScript\nexport { ActionLink, ActionButton }\n```\n\n## Consequences\n\n- More files\n- Need to know plain CSS\n- Need to learn how this library works\n",
      "date" : "2024-04-12T00:00:00Z",
      "format" : "Markdown",
      "id" : "3",
      "status" : "Accepted",
      "title" : "Use Styled Components"
    }, {
      "content" : "# 4. ESLint rule for newline after control flow blocks\n\nDate: 2024-05-23\n\n## Status\n\nAccepted\n\n## Context\n\nThis Pull Request introduces a new ESLint rule that enforces the addition of a newline after control flow blocks (e.g., `if`, `for`, `while`, `switch`). This rule aims to maintain consistent code formatting and enhance code readability across our codebase.\n\nWe have been following the convention of adding newlines after control flow blocks to improve code readability and formatting. However, this practice has been manually enforced, leading to potential inconsistencies. By introducing this ESLint rule, we can ensure that the linter automatically checks for this convention, streamlining the process and promoting a consistent coding style.\n\n## Consequences\n\n- ESLint might slow us down when committing changes if we have to fix files\n- ESLint might be too aggressive when it comes to applying the changes\n",
      "date" : "2024-05-23T00:00:00Z",
      "format" : "Markdown",
      "id" : "4",
      "status" : "Accepted",
      "title" : "ESLint rule for newline after control flow blocks"
    }, {
      "content" : "# 5. Using External Libraries\n\nDate: 2024-06-25\n\n## Status\n\nAccepted\n\n## Context\n\nTo ensure rapid delivery without reinventing the wheel, we will utilize external libraries and leverage existing solutions for complex problems. While these libraries provide substantial benefits, it's essential to establish guidelines to ensure a shared understanding of when to use external libraries and when to avoid them. Transitive dependencies can introduce underlying security vulnerabilities, increase the risk of dependency conflicts, and complicate the upgrade and maintenance processes.\n\n## Decision\n\n- We will prioritise using well-established libraries that are actively maintained and expected to have long-term support.\n- Libraries should have a proven track record of stability and regular updates, with a robust community or organizational backing to ensure continued maintenance and support.\n- To maintain simplicity and control over our codebase, we will avoid using external libraries for problems that can be solved internally with minimal effort and maintenance. For instance, we decided to create our own [AutoSave component](https://github.com/ministryofjustice/bichard7-next-ui/blob/main/src/components/EditableFields/AutoSave.tsx) for this reason.\n- Libraries with minimal dependencies are preferred (use `npm ls` to view dependency graph e.g `npm ls --all` or `npm ls sass`)\n\n## Consequences\n\n- By adopting well-established and maintained libraries with minimal dependencies, we enhance the security and stability of our projects and reduce the risk of vulnerabilities and maintenance issues.\n",
      "date" : "2024-06-25T00:00:00Z",
      "format" : "Markdown",
      "id" : "5",
      "status" : "Accepted",
      "title" : "Using External Libraries"
    }, {
      "content" : "# 6. Use [Fastify](https://fastify.dev/) API framework\n\nDate: 2024-09-13\n\n## Status\n\nAccepted\n\n## Context\n\nAs a team who are significantly invested in both [TypeScript](https://www.typescriptlang.org/) and [Zod](https://zod.dev/) for type safety both in development and at runtime, choosing technologies that provide first class support for these tools provides numerous benefits to the team:\n\n- Simplified developer experience\n- Succinct and easily digestible code\n- Shorter delivery time for features\n\nOur current web framework for the API is [Express](https://expressjs.com/). [Express](https://expressjs.com/) is a well supported, widely used framework that can be effectively used to build APIs. Given that our API is currently under development and isn't actively used in production, there isn't much code to change in order to change the web framework.\n\nWe are proposing to remove [Express](https://expressjs.com/) in order to utilise [Fastify](https://fastify.dev/), primarily on the basis that both frameworks can be effectively used to build APIs, but that [Fastify](https://fastify.dev/) provides first-class support for [TypeScript](https://www.typescriptlang.org/), [Zod](https://zod.dev/) and [OpenAPI](https://www.openapis.org/) document generation out of the box.\n\nThe decision to suggest [Fastify](https://fastify.dev/) results from having reviewed a number of web frameworks against our team's operational context - namely [NextJS](https://nextjs.org/) (as it is used elsewhere in the project), [Encore](https://encore.dev/) (because it has a good reputation for developer experience), [Fastify](https://fastify.dev/) and [Express](https://expressjs.com/) itself.\n\nHaving performed a few basic spikes to test the functionality and usability of each library with [Zod](https://zod.dev/), [TypeScript](https://www.typescriptlang.org/) and [OpenAPI](https://www.openapis.org/) document generation, both [Fastify](https://fastify.dev/) and [Encore](https://encore.dev/) performed above [NextJS](https://nextjs.org/) and [Express](https://expressjs.com/), but [Encore](https://encore.dev/) unfortunately takes too much responsibility for the resulting Docker image (no ability to edit the Dockerfile) for the service, which isn't a measure of control we're willing to give away.\n\n## Decision\n\nUsing principles for library adoption established in **ADR0005**, this is how we justify the decision.\n\n- [Fastify](https://fastify.dev/) reached v1 in October, 2018. Throughout the package's history, it has releases almost every month and has a consistent group of maintainers contributing to the project on a regular basis. The project is hosted by the OpenJS foundation and provides an LTS schedule on their website.\n- [Fastify](https://fastify.dev/) has fewer dependencies than [Express](https://expressjs.com/).\n\n## Consequences\n\n- Adopting [Fastify](https://fastify.dev/) will improve the developer experience for the API project, it will provide a web framework that is fast and well optimised and it will provide first class support within the API project for strong typing and accurate documentation.\n- Developers will need to learn a new web framework, which will incur an operational cost.\n- Developers will need to be able to work with [Zod](https://zod.dev/) in order to build new features on the API.\n",
      "date" : "2024-09-13T00:00:00Z",
      "format" : "Markdown",
      "id" : "6",
      "status" : "Accepted",
      "title" : "Use [Fastify](https://fastify.dev/) API framework"
    }, {
      "content" : "# 7. API Authentication and Authorisation Approach\n\nDate: 2024-10-21\n\n## Status\n\nAccepted\n\n## Context\n\nWe want the API to be secure, so we need Authentication and Authorisation. To maintain consistency throughout the\nservice, we will use the same tokens and secrets as the front end to verify the token and ensure it is correct.\n\nAlthough the primary use case is to handle requests coming from the UI made by end users, we also want to be able to\nhandle service requests, e.g.\n\n- Core creating records for exceptions and triggers\n- The resubmission service resubmitting PNC failures\n\n### Authentication and Authorisation\n\nThis is handled by the `Authorisation` header with a `Bearer` token. The bearer token will be validated to demonstrate\nthat the request is authenticated. When a service-to-service request is required and not on a user's behalf, we will\ngenerate a bearer token for that service.\n\nThe token is in the format of a [JWT](https://jwt.io/) and contains the user's or service information to verify what the\ntoken can and cannot do.\n\n## Consequences\n\n- A developer needs to understand:\n  - JWT and how they can be used\n  - The Bichard user permission model\n",
      "date" : "2024-10-21T00:00:00Z",
      "format" : "Markdown",
      "id" : "7",
      "status" : "Accepted",
      "title" : "API Authentication and Authorisation Approach"
    }, {
      "content" : "# 8. API Design\n\nDate: 2024-12-18\n\n## Status\n\nAccepted\n\n## Context\n\nWe want the API to be well-designed and consistent. To achieve this we are proposing the following approach which lays out some of the key design decisions when building an API:\n\n### RESTful API First\n\nWe will aim to use a RESTful approach as our primary design for the API. This means:\n\n- Using HTTP verbs to represent actions\n- Modelling our domain objects in the API, e.g. `/cases`\n\nThere may be times when an RPC approach is more suited to particular operations, expecially if they involve transactional constraints or coordinate a number of separate operations. In this case we will allow a hybrid ReST / RPC approach, e.g. `/cases/:caseId/resubmit`\n\n### Versioning\n\nIt's always easier to add versioning into the API in the beginning, therefore we will include a version in the URL, e.g. `/v1/cases`\n\n### Representation of data\n\nWe are using JSON to serialise our data and should apply the following conventions:\n\n- Use camelCase for attributes in the JSON data, e.g. `courtHouse`\n- Where the endpoint returns more than one record, we should have a root object which also contains pagination data\n\n### URL Design\n\nWe will apply the following rules to designing URLs in the API:\n\n- Use lowercase separate words with hyphens for path segments, e.g. `/court-cases`\n- Use snake_case words for query parameters, e.g. `/cases?per_page=20`\n- Pluralise resource names, e.g. `/cases`\n- Avoid trailing slashes\n- Use nesting if the resource should only be available via its parent, e.g. `/cases/:caseId/triggers`\n\n## Consequences\n\n- Setting out these design guidelines in advance means we will be more likely to end up with a consistent API design\n",
      "date" : "2024-12-18T00:00:00Z",
      "format" : "Markdown",
      "id" : "8",
      "status" : "Accepted",
      "title" : "API Design"
    }, {
      "content" : "# 9. Naming of Types and Schemas\n\nDate: 2025-01-16\n\n## Status\n\nAccepted\n\n## Context\n\nWe want to leverage [Zod's](https://zod.dev/) ability to validate schemas and turn the schemas into objects. This is\nespecially helpful whilst build the API as we can auto generate Swagger documentation for API calls (parameters,\nrequests and responses).\n\nWe also want to have a clear and concise naming convention for the Schemas and Types that the Zod schemas will create.\n\nTypes should be context and use case based, using `Pick<Case, CaseData>`, for example. It leads to not having to define\nthe Type in the Common package. This should be considered as an intermediate type, only to be used in this context and\nnot to be used outside the use case. The type should be clearly named for the use case to be involved with e.g.\n`CaseDataForDto` which contains only the attributes needed for that conversion (from the database to DTO).\n\nFor example:\n\n- Case (database representation) -> CaseDataForDto (picked fields for database query) -> CaseDto (data transform object\n  to send to the external services e.g. UI)\n- Trigger -> TriggerDto\n\nThe following guidelines should help in creating a good name structure as well looking at the API package code.\n\n### Names we will expect\n\n- `Schema` as a suffix to Zod Schema\n- `Dto` as a suffix to a Type which has been convert from a database object to a domain object\n- Strict camel case, for files and functions\n\n### Names we find acceptable\n\n- Try to avoid unnecessary suffixes\n- If you can't define an object using what it represents try either these suffixes:\n  - Object as aggregate `Data` e.g. has relations as part of the dataset\n  - Object is a pure database row `Row` e.g. no relations is part of the dataset\n- Try to create Types that are close to domain, context and use case\n\n### Names we want to avoid using\n\n- Lots of adjectives in a name\n- `Full`, `Partial`, `Raw`, `DB`\n\n## Consequences\n\nWe will have to carefully choose names that are meaningful. That may slow down our velocity. But this will be good trade\noff for the readability and maintainability for Bichard.\n",
      "date" : "2025-01-16T00:00:00Z",
      "format" : "Markdown",
      "id" : "9",
      "status" : "Accepted",
      "title" : "Naming of Types and Schemas"
    } ],
    "sections" : [ {
      "content" : "## Bichard\n\nWelcome to the microsite for the Bichard architecture and documentation.\n\nThe following diagram shows how Bichard fits in with high level view of MoJ.\n\n![System Landscape Diagram](embed:SystemLandscape)\n",
      "filename" : "001-index.md",
      "format" : "Markdown",
      "order" : 1,
      "title" : ""
    }, {
      "content" : "## Transitioning Bichard\n\n### \"Old\" Bichard\n\nBichard after the \"lift and shift\" into AWS. [Link to nice version of Old Bichard](/diagrams/OldBichard.png).\n\n![Old Bichard](embed:OldBichard)\n\n### Hybrid Bichard\n\nBichard in its current state. [Link to nice version of Hybrid Bichard](/diagrams/HybridBichard.png).\n![Old Bichard](embed:HybridBichard)\n",
      "filename" : "002-transitioning-bichard.md",
      "format" : "Markdown",
      "order" : 2,
      "title" : ""
    }, {
      "content" : "## Schemas\n\n- [Schema for Annotated Hearing Outcome](https://ministryofjustice.github.io/bichard7-next-core/schema/aho/index.html)\n- [Schema for SPI](https://ministryofjustice.github.io/bichard7-next-core/schema/spi/index.html)\n",
      "filename" : "003-schemas.md",
      "format" : "Markdown",
      "order" : 3,
      "title" : ""
    } ]
  },
  "id" : 1,
  "lastModifiedDate" : "2025-06-06T15:06:44Z",
  "model" : {
    "people" : [ {
      "id" : "1",
      "location" : "Unspecified",
      "name" : "Police User",
      "properties" : {
        "structurizr.dsl.identifier" : "policeuser"
      },
      "relationships" : [ {
        "description" : "Uses",
        "destinationId" : "9",
        "id" : "53",
        "sourceId" : "1",
        "tags" : "Relationship"
      }, {
        "description" : "Uses",
        "destinationId" : "4",
        "id" : "54",
        "sourceId" : "1",
        "tags" : "Relationship"
      } ],
      "tags" : "Element,Person"
    } ],
    "softwareSystems" : [ {
      "documentation" : { },
      "group" : "HMCTS",
      "id" : "2",
      "location" : "Unspecified",
      "name" : "Common Platform",
      "properties" : {
        "structurizr.dsl.identifier" : "commonplatform"
      },
      "relationships" : [ {
        "description" : "Sends result of a court case",
        "destinationId" : "10",
        "id" : "56",
        "sourceId" : "2",
        "tags" : "Relationship"
      } ],
      "tags" : "Element,Software System,Existing System"
    }, {
      "documentation" : { },
      "group" : "HMCTS",
      "id" : "3",
      "location" : "Unspecified",
      "name" : "Libra",
      "properties" : {
        "structurizr.dsl.identifier" : "libra"
      },
      "relationships" : [ {
        "description" : "Sends result of a court case",
        "destinationId" : "10",
        "id" : "57",
        "sourceId" : "3",
        "tags" : "Relationship"
      } ],
      "tags" : "Element,Software System,Existing System"
    }, {
      "documentation" : { },
      "group" : "Home Office - Police",
      "id" : "4",
      "location" : "Unspecified",
      "name" : "Police National Computer",
      "properties" : {
        "structurizr.dsl.identifier" : "pnc"
      },
      "tags" : "Element,Software System,Existing System"
    }, {
      "description" : "An instant messaging service used by Made Tech",
      "documentation" : { },
      "id" : "5",
      "location" : "Unspecified",
      "name" : "Slack",
      "properties" : {
        "structurizr.dsl.identifier" : "slack"
      },
      "tags" : "Element,Software System,External",
      "url" : "https://slack.com/"
    }, {
      "description" : "An alert tool for instances when the systems trigger an alarm",
      "documentation" : { },
      "id" : "6",
      "location" : "Unspecified",
      "name" : "PagerDuty",
      "properties" : {
        "structurizr.dsl.identifier" : "pagerduty"
      },
      "tags" : "Element,Software System,External",
      "url" : "https://www.pagerduty.com/"
    }, {
      "documentation" : { },
      "id" : "7",
      "location" : "Unspecified",
      "name" : "CJSM",
      "properties" : {
        "structurizr.dsl.identifier" : "cjsm"
      },
      "relationships" : [ {
        "description" : "Gets email",
        "destinationId" : "1",
        "id" : "55",
        "sourceId" : "7",
        "tags" : "Relationship"
      } ],
      "tags" : "Element,Software System,Existing System"
    }, {
      "documentation" : { },
      "group" : "AWS",
      "id" : "8",
      "location" : "Unspecified",
      "name" : "DynamoDB",
      "properties" : {
        "structurizr.dsl.identifier" : "dynamodb"
      },
      "tags" : "Element,Software System,Existing System"
    }, {
      "description" : "Q-Solution",
      "documentation" : { },
      "group" : "CJSE",
      "id" : "9",
      "location" : "Unspecified",
      "name" : "PSN Proxy",
      "properties" : {
        "structurizr.dsl.identifier" : "qsolution"
      },
      "relationships" : [ {
        "description" : "Uses",
        "destinationId" : "4",
        "id" : "58",
        "sourceId" : "9",
        "tags" : "Relationship"
      } ],
      "tags" : "Element,Software System,Nginx,Existing System"
    }, {
      "documentation" : { },
      "group" : "CJSE",
      "id" : "10",
      "location" : "Unspecified",
      "name" : "ExISS",
      "properties" : {
        "structurizr.dsl.identifier" : "exiss"
      },
      "relationships" : [ {
        "destinationId" : "14",
        "id" : "71",
        "sourceId" : "10",
        "tags" : "Relationship"
      }, {
        "destinationId" : "13",
        "id" : "72",
        "linkedRelationshipId" : "71",
        "sourceId" : "10"
      }, {
        "destinationId" : "11",
        "id" : "73",
        "linkedRelationshipId" : "71",
        "sourceId" : "10"
      } ],
      "tags" : "Element,Software System,Existing System"
    }, {
      "containers" : [ {
        "documentation" : { },
        "id" : "12",
        "name" : "Beanconnect",
        "properties" : {
          "structurizr.dsl.identifier" : "beanconnect"
        },
        "relationships" : [ {
          "destinationId" : "9",
          "id" : "60",
          "sourceId" : "12",
          "tags" : "Relationship"
        } ],
        "tags" : "Element,Container"
      }, {
        "components" : [ {
          "documentation" : { },
          "id" : "14",
          "name" : "External Incoming S3 bucket",
          "properties" : {
            "structurizr.dsl.identifier" : "incomings3bucket"
          },
          "relationships" : [ {
            "destinationId" : "15",
            "id" : "74",
            "sourceId" : "14",
            "tags" : "Relationship"
          } ],
          "tags" : "Element,Component,Queue"
        }, {
          "documentation" : { },
          "id" : "15",
          "name" : "Transfer lambda",
          "properties" : {
            "structurizr.dsl.identifier" : "transferprocess"
          },
          "relationships" : [ {
            "destinationId" : "17",
            "id" : "75",
            "sourceId" : "15",
            "tags" : "Relationship"
          }, {
            "destinationId" : "16",
            "id" : "76",
            "linkedRelationshipId" : "75",
            "sourceId" : "15"
          } ],
          "tags" : "Element,Component,Lambda"
        } ],
        "documentation" : { },
        "id" : "13",
        "name" : "Message Transfer Lambda",
        "properties" : {
          "structurizr.dsl.identifier" : "messagetransfer"
        },
        "relationships" : [ {
          "destinationId" : "17",
          "id" : "77",
          "linkedRelationshipId" : "75",
          "sourceId" : "13"
        }, {
          "destinationId" : "16",
          "id" : "78",
          "linkedRelationshipId" : "75",
          "sourceId" : "13"
        }, {
          "destinationId" : "48",
          "id" : "127",
          "sourceId" : "13",
          "tags" : "Relationship"
        } ],
        "tags" : "Element,Container"
      }, {
        "components" : [ {
          "description" : "Blah blah",
          "documentation" : { },
          "id" : "17",
          "name" : "Internal Incoming S3 bucket",
          "properties" : {
            "structurizr.dsl.identifier" : "internalincomings3bucket"
          },
          "relationships" : [ {
            "destinationId" : "18",
            "id" : "79",
            "sourceId" : "17",
            "tags" : "Relationship"
          } ],
          "tags" : "Element,Component,Queue"
        }, {
          "documentation" : { },
          "id" : "18",
          "name" : "Store Message",
          "properties" : {
            "structurizr.dsl.identifier" : "storemessage"
          },
          "relationships" : [ {
            "destinationId" : "31",
            "id" : "80",
            "sourceId" : "18",
            "tags" : "Relationship"
          }, {
            "destinationId" : "19",
            "id" : "82",
            "sourceId" : "18",
            "tags" : "Relationship"
          } ],
          "tags" : "Element,Component,Lambda"
        }, {
          "documentation" : { },
          "id" : "19",
          "name" : "Send to Bichard",
          "properties" : {
            "structurizr.dsl.identifier" : "sendtobichard"
          },
          "relationships" : [ {
            "destinationId" : "25",
            "id" : "83",
            "sourceId" : "19",
            "tags" : "Relationship"
          }, {
            "destinationId" : "20",
            "id" : "85",
            "sourceId" : "19",
            "tags" : "Relationship"
          } ],
          "tags" : "Element,Component,Lambda"
        }, {
          "documentation" : { },
          "id" : "20",
          "name" : "Record Sent to Bichard",
          "properties" : {
            "structurizr.dsl.identifier" : "recordsenttobichard"
          },
          "relationships" : [ {
            "destinationId" : "31",
            "id" : "86",
            "sourceId" : "20",
            "tags" : "Relationship"
          } ],
          "tags" : "Element,Component,Lambda"
        } ],
        "documentation" : { },
        "id" : "16",
        "name" : "Incoming Message Handler Step Function",
        "properties" : {
          "structurizr.dsl.identifier" : "incomingmessagehandler"
        },
        "relationships" : [ {
          "destinationId" : "31",
          "id" : "81",
          "linkedRelationshipId" : "80",
          "sourceId" : "16"
        }, {
          "destinationId" : "25",
          "id" : "84",
          "linkedRelationshipId" : "83",
          "sourceId" : "16"
        } ],
        "tags" : "Element,Container"
      }, {
        "documentation" : { },
        "id" : "21",
        "name" : "Event Lambda",
        "properties" : {
          "structurizr.dsl.identifier" : "eventlambda"
        },
        "relationships" : [ {
          "destinationId" : "23",
          "id" : "88",
          "sourceId" : "21",
          "tags" : "Relationship"
        }, {
          "destinationId" : "22",
          "id" : "89",
          "linkedRelationshipId" : "88",
          "sourceId" : "21"
        } ],
        "tags" : "Element,Container"
      }, {
        "components" : [ {
          "documentation" : { },
          "id" : "23",
          "name" : "Event S3 bucket",
          "properties" : {
            "structurizr.dsl.identifier" : "events3bucket"
          },
          "relationships" : [ {
            "destinationId" : "24",
            "id" : "90",
            "sourceId" : "23",
            "tags" : "Relationship"
          } ],
          "tags" : "Element,Component,Queue"
        }, {
          "documentation" : { },
          "id" : "24",
          "name" : "Write to Audit Log",
          "properties" : {
            "structurizr.dsl.identifier" : "writetoauditlog"
          },
          "relationships" : [ {
            "destinationId" : "31",
            "id" : "91",
            "sourceId" : "24",
            "tags" : "Relationship"
          } ],
          "tags" : "Element,Component,Lambda"
        } ],
        "documentation" : { },
        "id" : "22",
        "name" : "Event Handler Step Function",
        "properties" : {
          "structurizr.dsl.identifier" : "eventhandler"
        },
        "relationships" : [ {
          "destinationId" : "31",
          "id" : "92",
          "linkedRelationshipId" : "91",
          "sourceId" : "22"
        } ],
        "tags" : "Element,Container"
      }, {
        "documentation" : { },
        "id" : "25",
        "name" : "Active MQ",
        "properties" : {
          "structurizr.dsl.identifier" : "activemq"
        },
        "relationships" : [ {
          "destinationId" : "21",
          "id" : "87",
          "sourceId" : "25",
          "tags" : "Relationship"
        }, {
          "destinationId" : "29",
          "id" : "93",
          "sourceId" : "25",
          "tags" : "Relationship"
        } ],
        "tags" : "Element,Container",
        "technology" : "Active MQ"
      }, {
        "documentation" : { },
        "id" : "26",
        "name" : "Nginx Auth Proxy",
        "properties" : {
          "structurizr.dsl.identifier" : "nginxauthproxy"
        },
        "relationships" : [ {
          "destinationId" : "29",
          "id" : "65",
          "sourceId" : "26",
          "tags" : "Relationship"
        }, {
          "description" : "Uses",
          "destinationId" : "30",
          "id" : "66",
          "sourceId" : "26",
          "tags" : "Relationship"
        }, {
          "destinationId" : "34",
          "id" : "67",
          "sourceId" : "26",
          "tags" : "Relationship"
        }, {
          "destinationId" : "46",
          "id" : "118",
          "sourceId" : "26",
          "tags" : "Relationship"
        } ],
        "tags" : "Element,Container",
        "technology" : "Nginx",
        "url" : "https://github.com/ministryofjustice/bichard7-next-infrastructure-docker-images/tree/main/Nginx_Auth_Proxy"
      }, {
        "documentation" : { },
        "id" : "27",
        "name" : "Bichard Database",
        "properties" : {
          "structurizr.dsl.identifier" : "database"
        },
        "tags" : "Element,Container,Database,Existing System",
        "technology" : "PostgreSQL"
      }, {
        "documentation" : { },
        "id" : "28",
        "name" : "Email System",
        "properties" : {
          "structurizr.dsl.identifier" : "emailsystem"
        },
        "relationships" : [ {
          "description" : "Sends verification code",
          "destinationId" : "7",
          "id" : "62",
          "sourceId" : "28",
          "tags" : "Relationship"
        } ],
        "tags" : "Element,Container",
        "technology" : "Postfix",
        "url" : "https://github.com/ministryofjustice/bichard7-next-infrastructure-docker-images/tree/main/Postfix"
      }, {
        "documentation" : { },
        "id" : "29",
        "name" : "Bichard Java Application",
        "properties" : {
          "structurizr.dsl.identifier" : "bichardjavaapplication"
        },
        "relationships" : [ {
          "destinationId" : "12",
          "id" : "59",
          "sourceId" : "29",
          "tags" : "Relationship"
        }, {
          "description" : "Reads from / Writes to",
          "destinationId" : "27",
          "id" : "69",
          "sourceId" : "29",
          "tags" : "Relationship"
        }, {
          "destinationId" : "25",
          "id" : "94",
          "sourceId" : "29",
          "tags" : "Relationship"
        } ],
        "tags" : "Element,Container,Existing System",
        "technology" : "Java EE"
      }, {
        "description" : "An application to provide user authentication and user management",
        "documentation" : { },
        "id" : "30",
        "name" : "Bichard User Service",
        "properties" : {
          "structurizr.dsl.identifier" : "bicharduserservice"
        },
        "relationships" : [ {
          "description" : "Sends verification code",
          "destinationId" : "28",
          "id" : "64",
          "sourceId" : "30",
          "tags" : "Relationship"
        }, {
          "description" : "Reads from / Writes to",
          "destinationId" : "27",
          "id" : "68",
          "sourceId" : "30",
          "tags" : "Relationship"
        } ],
        "tags" : "Element,Container,Web Browser",
        "technology" : "Next.js, TypeScript & React",
        "url" : "https://github.com/ministryofjustice/bichard7-next-user-service"
      }, {
        "components" : [ {
          "documentation" : { },
          "id" : "32",
          "name" : "Audit Log API Gateway",
          "properties" : {
            "structurizr.dsl.identifier" : "auditlogapigateway"
          },
          "relationships" : [ {
            "destinationId" : "33",
            "id" : "95",
            "sourceId" : "32",
            "tags" : "Relationship"
          } ],
          "tags" : "Element,Component"
        }, {
          "documentation" : { },
          "id" : "33",
          "name" : "Audit Log API Lambda",
          "properties" : {
            "structurizr.dsl.identifier" : "auditlogapilambda"
          },
          "relationships" : [ {
            "destinationId" : "8",
            "id" : "96",
            "sourceId" : "33",
            "tags" : "Relationship"
          } ],
          "tags" : "Element,Component"
        } ],
        "documentation" : { },
        "id" : "31",
        "name" : "Audit Log",
        "properties" : {
          "structurizr.dsl.identifier" : "auditlogapi"
        },
        "relationships" : [ {
          "destinationId" : "8",
          "id" : "97",
          "linkedRelationshipId" : "96",
          "sourceId" : "31"
        } ],
        "tags" : "Element,Container,API"
      }, {
        "documentation" : { },
        "id" : "34",
        "name" : "Static File Service",
        "properties" : {
          "structurizr.dsl.identifier" : "staticfileservice"
        },
        "tags" : "Element,Container"
      }, {
        "components" : [ {
          "documentation" : { },
          "id" : "36",
          "name" : "Automation Report",
          "properties" : {
            "structurizr.dsl.identifier" : "automationreport"
          },
          "relationships" : [ {
            "destinationId" : "31",
            "id" : "99",
            "sourceId" : "36",
            "tags" : "Relationship"
          }, {
            "destinationId" : "34",
            "id" : "102",
            "sourceId" : "36",
            "tags" : "Relationship"
          } ],
          "tags" : "Element,Component,Lambda"
        }, {
          "documentation" : { },
          "id" : "37",
          "name" : "Common Platform Report",
          "properties" : {
            "structurizr.dsl.identifier" : "commonplatformreport"
          },
          "relationships" : [ {
            "destinationId" : "31",
            "id" : "101",
            "sourceId" : "37",
            "tags" : "Relationship"
          }, {
            "destinationId" : "28",
            "id" : "105",
            "sourceId" : "37",
            "tags" : "Relationship"
          } ],
          "tags" : "Element,Component,Lambda"
        }, {
          "documentation" : { },
          "id" : "38",
          "name" : "MPS Report",
          "properties" : {
            "structurizr.dsl.identifier" : "mpsreport"
          },
          "relationships" : [ {
            "destinationId" : "27",
            "id" : "107",
            "sourceId" : "38",
            "tags" : "Relationship"
          } ],
          "tags" : "Element,Component,Lambda"
        }, {
          "documentation" : { },
          "id" : "39",
          "name" : "Top Exceptions Report",
          "properties" : {
            "structurizr.dsl.identifier" : "topexceptionsreport"
          },
          "relationships" : [ {
            "destinationId" : "34",
            "id" : "104",
            "sourceId" : "39",
            "tags" : "Relationship"
          }, {
            "destinationId" : "31",
            "id" : "109",
            "sourceId" : "39",
            "tags" : "Relationship"
          } ],
          "tags" : "Element,Component,Lambda"
        } ],
        "documentation" : { },
        "id" : "35",
        "name" : "Reporting",
        "properties" : {
          "structurizr.dsl.identifier" : "reportingservice"
        },
        "relationships" : [ {
          "destinationId" : "31",
          "id" : "100",
          "linkedRelationshipId" : "99",
          "sourceId" : "35"
        }, {
          "destinationId" : "34",
          "id" : "103",
          "linkedRelationshipId" : "102",
          "sourceId" : "35"
        }, {
          "destinationId" : "28",
          "id" : "106",
          "linkedRelationshipId" : "105",
          "sourceId" : "35"
        }, {
          "destinationId" : "27",
          "id" : "108",
          "linkedRelationshipId" : "107",
          "sourceId" : "35"
        } ],
        "tags" : "Element,Container"
      }, {
        "components" : [ {
          "description" : "Logs gathered from all AWS services",
          "documentation" : { },
          "id" : "41",
          "name" : "CloudWatch Logs",
          "properties" : {
            "structurizr.dsl.identifier" : "cloudwatchlogs"
          },
          "tags" : "Element,Component"
        }, {
          "documentation" : { },
          "id" : "42",
          "name" : "CloudWatch Metrics",
          "properties" : {
            "structurizr.dsl.identifier" : "cloudwatchmetrics"
          },
          "relationships" : [ {
            "destinationId" : "44",
            "id" : "110",
            "sourceId" : "42",
            "tags" : "Relationship"
          } ],
          "tags" : "Element,Component"
        }, {
          "documentation" : { },
          "id" : "43",
          "name" : "Slack message handler",
          "properties" : {
            "structurizr.dsl.identifier" : "slacklambda"
          },
          "relationships" : [ {
            "description" : "Sends message",
            "destinationId" : "5",
            "id" : "115",
            "sourceId" : "43",
            "tags" : "Relationship",
            "technology" : "via TLS Webhook"
          } ],
          "tags" : "Element,Component,Lambda"
        }, {
          "documentation" : { },
          "id" : "44",
          "name" : "SNS",
          "properties" : {
            "structurizr.dsl.identifier" : "sns"
          },
          "relationships" : [ {
            "description" : "Sends message",
            "destinationId" : "6",
            "id" : "111",
            "sourceId" : "44",
            "tags" : "Relationship"
          }, {
            "description" : "Sends message",
            "destinationId" : "43",
            "id" : "114",
            "sourceId" : "44",
            "tags" : "Relationship"
          } ],
          "tags" : "Element,Component,SNS"
        } ],
        "documentation" : { },
        "id" : "40",
        "name" : "Monitoring",
        "properties" : {
          "structurizr.dsl.identifier" : "monitoring"
        },
        "relationships" : [ {
          "description" : "Sends message",
          "destinationId" : "6",
          "id" : "112",
          "linkedRelationshipId" : "111",
          "sourceId" : "40"
        }, {
          "description" : "Sends message",
          "destinationId" : "5",
          "id" : "116",
          "linkedRelationshipId" : "115",
          "sourceId" : "40",
          "technology" : "via TLS Webhook"
        } ],
        "tags" : "Element,Container"
      }, {
        "documentation" : { },
        "id" : "45",
        "name" : "PNC API",
        "properties" : {
          "structurizr.dsl.identifier" : "pncapi"
        },
        "relationships" : [ {
          "destinationId" : "12",
          "id" : "126",
          "sourceId" : "45",
          "tags" : "Relationship"
        } ],
        "tags" : "Element,Container,API"
      }, {
        "description" : "A new way of interacting with Bichard, complying with Gov.uk standards",
        "documentation" : { },
        "id" : "46",
        "name" : "Bichard UI",
        "properties" : {
          "structurizr.dsl.identifier" : "bichardui"
        },
        "relationships" : [ {
          "destinationId" : "27",
          "id" : "119",
          "sourceId" : "46",
          "tags" : "Relationship"
        }, {
          "destinationId" : "52",
          "id" : "120",
          "sourceId" : "46",
          "tags" : "Relationship"
        }, {
          "destinationId" : "31",
          "id" : "121",
          "sourceId" : "46",
          "tags" : "Relationship"
        } ],
        "tags" : "Element,Container,Web Browser",
        "technology" : "TypeScript & React",
        "url" : "https://github.com/ministryofjustice/bichard7-next-core/tree/main/packages/ui"
      }, {
        "description" : "The code to replace the processing logic of Bichard7",
        "documentation" : { },
        "id" : "47",
        "name" : "Bichard Next Core",
        "properties" : {
          "structurizr.dsl.identifier" : "bichardnextcore"
        },
        "relationships" : [ {
          "destinationId" : "31",
          "id" : "123",
          "sourceId" : "47",
          "tags" : "Relationship"
        }, {
          "description" : "Reads from and writes to",
          "destinationId" : "27",
          "id" : "124",
          "sourceId" : "47",
          "tags" : "Relationship"
        }, {
          "destinationId" : "45",
          "id" : "125",
          "sourceId" : "47",
          "tags" : "Relationship"
        } ],
        "tags" : "Element,Container",
        "technology" : "Next.js, TypeScript",
        "url" : "https://github.com/ministryofjustice/bichard7-next-core"
      }, {
        "components" : [ {
          "documentation" : { },
          "id" : "49",
          "name" : "Phase 1 Queue",
          "properties" : {
            "structurizr.dsl.identifier" : "phaseone"
          },
          "relationships" : [ {
            "destinationId" : "49",
            "id" : "128",
            "sourceId" : "49",
            "tags" : "Relationship"
          }, {
            "destinationId" : "50",
            "id" : "129",
            "sourceId" : "49",
            "tags" : "Relationship"
          }, {
            "destinationId" : "31",
            "id" : "132",
            "sourceId" : "49",
            "tags" : "Relationship"
          } ],
          "tags" : "Element,Component",
          "technology" : "TypeScript"
        }, {
          "documentation" : { },
          "id" : "50",
          "name" : "Phase 2 Queue",
          "properties" : {
            "structurizr.dsl.identifier" : "phasetwo"
          },
          "relationships" : [ {
            "destinationId" : "50",
            "id" : "130",
            "sourceId" : "50",
            "tags" : "Relationship"
          }, {
            "destinationId" : "51",
            "id" : "131",
            "sourceId" : "50",
            "tags" : "Relationship"
          }, {
            "destinationId" : "31",
            "id" : "134",
            "sourceId" : "50",
            "tags" : "Relationship"
          } ],
          "tags" : "Element,Component",
          "technology" : "TypeScript"
        }, {
          "documentation" : { },
          "id" : "51",
          "name" : "Phase 3 Queue",
          "properties" : {
            "structurizr.dsl.identifier" : "phasethree"
          },
          "relationships" : [ {
            "destinationId" : "31",
            "id" : "135",
            "sourceId" : "51",
            "tags" : "Relationship"
          }, {
            "destinationId" : "45",
            "id" : "136",
            "sourceId" : "51",
            "tags" : "Relationship"
          } ],
          "tags" : "Element,Component",
          "technology" : "TypeScript"
        } ],
        "documentation" : { },
        "id" : "48",
        "name" : "Conductor",
        "properties" : {
          "structurizr.dsl.identifier" : "conductor"
        },
        "relationships" : [ {
          "destinationId" : "31",
          "id" : "133",
          "linkedRelationshipId" : "132",
          "sourceId" : "48"
        }, {
          "destinationId" : "45",
          "id" : "137",
          "linkedRelationshipId" : "136",
          "sourceId" : "48"
        } ],
        "tags" : "Element,Container",
        "url" : "https://github.com/ministryofjustice/bichard7-next-core/tree/main/packages/conductor"
      }, {
        "description" : "An API to remove DB actions from UI and to be Audit Logs",
        "documentation" : { },
        "id" : "52",
        "name" : "Bichard API",
        "properties" : {
          "structurizr.dsl.identifier" : "bichardapi"
        },
        "relationships" : [ {
          "description" : "Reads from / Writes to",
          "destinationId" : "27",
          "id" : "70",
          "sourceId" : "52",
          "tags" : "Relationship"
        }, {
          "destinationId" : "8",
          "id" : "122",
          "sourceId" : "52",
          "tags" : "Relationship"
        } ],
        "tags" : "Element,Container,API",
        "technology" : "TypeScript, Fastify & Zod",
        "url" : "https://github.com/ministryofjustice/bichard7-next-core/tree/main/packages/api"
      } ],
      "documentation" : { },
      "group" : "CJSE",
      "id" : "11",
      "location" : "Unspecified",
      "name" : "Bichard",
      "properties" : {
        "structurizr.dsl.identifier" : "bichard"
      },
      "relationships" : [ {
        "destinationId" : "9",
        "id" : "61",
        "linkedRelationshipId" : "60",
        "sourceId" : "11"
      }, {
        "description" : "Sends verification code",
        "destinationId" : "7",
        "id" : "63",
        "linkedRelationshipId" : "62",
        "sourceId" : "11"
      }, {
        "destinationId" : "8",
        "id" : "98",
        "linkedRelationshipId" : "96",
        "sourceId" : "11"
      }, {
        "description" : "Sends message",
        "destinationId" : "6",
        "id" : "113",
        "linkedRelationshipId" : "111",
        "sourceId" : "11"
      }, {
        "description" : "Sends message",
        "destinationId" : "5",
        "id" : "117",
        "linkedRelationshipId" : "115",
        "sourceId" : "11",
        "technology" : "via TLS Webhook"
      } ],
      "tags" : "Element,Software System"
    } ]
  },
  "name" : "Bichard",
  "properties" : {
    "structurizr.dsl" : ""
  },
  "views" : {
    "componentViews" : [ {
      "automaticLayout" : {
        "applied" : false,
        "edgeSeparation" : 0,
        "implementation" : "Graphviz",
        "nodeSeparation" : 300,
        "rankDirection" : "LeftRight",
        "rankSeparation" : 300,
        "vertices" : false
      },
      "containerId" : "48",
      "elements" : [ {
        "id" : "31",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "45",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "49",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "50",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "51",
        "x" : 0,
        "y" : 0
      } ],
      "externalContainerBoundariesVisible" : false,
      "generatedKey" : true,
      "key" : "Component-001",
      "order" : 5,
      "relationships" : [ {
        "id" : "128"
      }, {
        "id" : "129"
      }, {
        "id" : "130"
      }, {
        "id" : "131"
      }, {
        "id" : "132"
      }, {
        "id" : "134"
      }, {
        "id" : "135"
      }, {
        "id" : "136"
      } ]
    }, {
      "automaticLayout" : {
        "applied" : false,
        "edgeSeparation" : 0,
        "implementation" : "Graphviz",
        "nodeSeparation" : 300,
        "rankDirection" : "LeftRight",
        "rankSeparation" : 300,
        "vertices" : false
      },
      "containerId" : "16",
      "elements" : [ {
        "id" : "13",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "17",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "18",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "19",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "20",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "25",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "31",
        "x" : 0,
        "y" : 0
      } ],
      "externalContainerBoundariesVisible" : false,
      "generatedKey" : true,
      "key" : "Component-002",
      "order" : 6,
      "relationships" : [ {
        "id" : "77"
      }, {
        "id" : "79"
      }, {
        "id" : "80"
      }, {
        "id" : "82"
      }, {
        "id" : "83"
      }, {
        "id" : "85"
      }, {
        "id" : "86"
      } ]
    }, {
      "automaticLayout" : {
        "applied" : false,
        "edgeSeparation" : 0,
        "implementation" : "Graphviz",
        "nodeSeparation" : 300,
        "rankDirection" : "TopBottom",
        "rankSeparation" : 300,
        "vertices" : false
      },
      "containerId" : "13",
      "elements" : [ {
        "id" : "10",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "14",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "15",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "16",
        "x" : 0,
        "y" : 0
      } ],
      "externalContainerBoundariesVisible" : false,
      "generatedKey" : true,
      "key" : "Component-003",
      "order" : 7,
      "relationships" : [ {
        "id" : "71"
      }, {
        "id" : "74"
      }, {
        "id" : "76"
      } ]
    }, {
      "automaticLayout" : {
        "applied" : false,
        "edgeSeparation" : 0,
        "implementation" : "Graphviz",
        "nodeSeparation" : 300,
        "rankDirection" : "LeftRight",
        "rankSeparation" : 300,
        "vertices" : false
      },
      "containerId" : "31",
      "elements" : [ {
        "id" : "8",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "32",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "33",
        "x" : 0,
        "y" : 0
      } ],
      "externalContainerBoundariesVisible" : false,
      "generatedKey" : true,
      "key" : "Component-004",
      "order" : 8,
      "relationships" : [ {
        "id" : "95"
      }, {
        "id" : "96"
      } ]
    }, {
      "automaticLayout" : {
        "applied" : false,
        "edgeSeparation" : 0,
        "implementation" : "Graphviz",
        "nodeSeparation" : 300,
        "rankDirection" : "LeftRight",
        "rankSeparation" : 300,
        "vertices" : false
      },
      "containerId" : "22",
      "elements" : [ {
        "id" : "21",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "23",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "24",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "31",
        "x" : 0,
        "y" : 0
      } ],
      "externalContainerBoundariesVisible" : false,
      "generatedKey" : true,
      "key" : "Component-005",
      "order" : 9,
      "relationships" : [ {
        "id" : "88"
      }, {
        "id" : "90"
      }, {
        "id" : "91"
      } ]
    }, {
      "automaticLayout" : {
        "applied" : false,
        "edgeSeparation" : 0,
        "implementation" : "Graphviz",
        "nodeSeparation" : 300,
        "rankDirection" : "LeftRight",
        "rankSeparation" : 300,
        "vertices" : false
      },
      "containerId" : "35",
      "elements" : [ {
        "id" : "27",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "28",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "31",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "34",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "36",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "37",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "38",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "39",
        "x" : 0,
        "y" : 0
      } ],
      "externalContainerBoundariesVisible" : false,
      "generatedKey" : true,
      "key" : "Component-006",
      "order" : 10,
      "relationships" : [ {
        "id" : "101"
      }, {
        "id" : "102"
      }, {
        "id" : "104"
      }, {
        "id" : "105"
      }, {
        "id" : "107"
      }, {
        "id" : "109"
      }, {
        "id" : "99"
      } ]
    }, {
      "automaticLayout" : {
        "applied" : false,
        "edgeSeparation" : 0,
        "implementation" : "Graphviz",
        "nodeSeparation" : 300,
        "rankDirection" : "LeftRight",
        "rankSeparation" : 300,
        "vertices" : false
      },
      "containerId" : "40",
      "elements" : [ {
        "id" : "5",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "6",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "41",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "42",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "43",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "44",
        "x" : 0,
        "y" : 0
      } ],
      "externalContainerBoundariesVisible" : false,
      "generatedKey" : true,
      "key" : "Component-007",
      "order" : 11,
      "relationships" : [ {
        "id" : "110"
      }, {
        "id" : "111"
      }, {
        "id" : "114"
      }, {
        "id" : "115"
      } ]
    } ],
    "configuration" : {
      "branding" : { },
      "lastSavedView" : "HybridBichard",
      "styles" : {
        "elements" : [ {
          "shape" : "WebBrowser",
          "tag" : "Web Browser"
        }, {
          "shape" : "Cylinder",
          "tag" : "Database"
        }, {
          "shape" : "Hexagon",
          "tag" : "API"
        }, {
          "shape" : "Pipe",
          "tag" : "Queue"
        }, {
          "shape" : "Diamond",
          "tag" : "Lambda"
        }, {
          "shape" : "Pipe",
          "tag" : "SNS"
        }, {
          "background" : "#9b76ff",
          "color" : "#ffffff",
          "tag" : "External"
        }, {
          "background" : "#999999",
          "color" : "#ffffff",
          "tag" : "Existing System"
        } ]
      },
      "terminology" : { },
      "themes" : [ "https://static.structurizr.com/themes/default/theme.json" ]
    },
    "containerViews" : [ {
      "automaticLayout" : {
        "applied" : false,
        "edgeSeparation" : 0,
        "implementation" : "Graphviz",
        "nodeSeparation" : 300,
        "rankDirection" : "TopBottom",
        "rankSeparation" : 300,
        "vertices" : false
      },
      "elements" : [ {
        "id" : "7",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "8",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "9",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "10",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "12",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "13",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "16",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "21",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "22",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "25",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "26",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "27",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "28",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "29",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "30",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "31",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "34",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "35",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "40",
        "x" : 0,
        "y" : 0
      } ],
      "externalSoftwareSystemBoundariesVisible" : false,
      "key" : "OldBichard",
      "order" : 3,
      "relationships" : [ {
        "id" : "100"
      }, {
        "id" : "103"
      }, {
        "id" : "106"
      }, {
        "id" : "108"
      }, {
        "id" : "59"
      }, {
        "id" : "60"
      }, {
        "id" : "62"
      }, {
        "id" : "64"
      }, {
        "id" : "65"
      }, {
        "id" : "66"
      }, {
        "id" : "67"
      }, {
        "id" : "68"
      }, {
        "id" : "69"
      }, {
        "id" : "72"
      }, {
        "id" : "78"
      }, {
        "id" : "81"
      }, {
        "id" : "84"
      }, {
        "id" : "87"
      }, {
        "id" : "89"
      }, {
        "id" : "92"
      }, {
        "id" : "93"
      }, {
        "id" : "94"
      }, {
        "id" : "97"
      } ],
      "softwareSystemId" : "11",
      "title" : "Old Bichard"
    }, {
      "dimensions" : {
        "height" : 4050,
        "width" : 4017
      },
      "elements" : [ {
        "id" : "7",
        "x" : 330,
        "y" : 3505
      }, {
        "id" : "8",
        "x" : 2380,
        "y" : 3495
      }, {
        "id" : "9",
        "x" : 3356,
        "y" : 3500
      }, {
        "id" : "10",
        "x" : 3005,
        "y" : 165
      }, {
        "id" : "12",
        "x" : 3346,
        "y" : 2995
      }, {
        "id" : "13",
        "x" : 2995,
        "y" : 670
      }, {
        "id" : "26",
        "x" : 1179,
        "y" : 645
      }, {
        "id" : "27",
        "x" : 1151,
        "y" : 2155
      }, {
        "id" : "28",
        "x" : 355,
        "y" : 2275
      }, {
        "id" : "30",
        "x" : 1159,
        "y" : 1207
      }, {
        "id" : "31",
        "x" : 2711,
        "y" : 2105
      }, {
        "id" : "34",
        "x" : 375,
        "y" : 1200
      }, {
        "id" : "35",
        "x" : 1121,
        "y" : 2970
      }, {
        "id" : "40",
        "x" : 219,
        "y" : 617
      }, {
        "id" : "45",
        "x" : 3336,
        "y" : 2110
      }, {
        "id" : "46",
        "x" : 1849,
        "y" : 1210
      }, {
        "id" : "48",
        "x" : 3005,
        "y" : 1245
      }, {
        "id" : "52",
        "x" : 2085,
        "y" : 2100
      } ],
      "externalSoftwareSystemBoundariesVisible" : false,
      "key" : "HybridBichard",
      "order" : 4,
      "relationships" : [ {
        "id" : "100"
      }, {
        "id" : "103"
      }, {
        "id" : "106"
      }, {
        "id" : "108"
      }, {
        "id" : "118"
      }, {
        "id" : "119"
      }, {
        "id" : "120"
      }, {
        "id" : "121"
      }, {
        "id" : "122"
      }, {
        "id" : "126"
      }, {
        "id" : "127"
      }, {
        "id" : "133"
      }, {
        "id" : "137"
      }, {
        "id" : "60"
      }, {
        "id" : "62"
      }, {
        "id" : "64"
      }, {
        "id" : "66"
      }, {
        "id" : "67"
      }, {
        "id" : "68"
      }, {
        "id" : "70"
      }, {
        "id" : "72"
      }, {
        "id" : "97"
      } ],
      "softwareSystemId" : "11",
      "title" : "Hybrid Bichard"
    } ],
    "systemContextViews" : [ {
      "automaticLayout" : {
        "applied" : false,
        "edgeSeparation" : 0,
        "implementation" : "Graphviz",
        "nodeSeparation" : 300,
        "rankDirection" : "LeftRight",
        "rankSeparation" : 300,
        "vertices" : false
      },
      "elements" : [ {
        "id" : "7",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "9",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "10",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "11",
        "x" : 0,
        "y" : 0
      } ],
      "enterpriseBoundaryVisible" : true,
      "key" : "BichardSystemContext",
      "order" : 2,
      "relationships" : [ {
        "id" : "61"
      }, {
        "id" : "63"
      }, {
        "id" : "73"
      } ],
      "softwareSystemId" : "11"
    } ],
    "systemLandscapeViews" : [ {
      "automaticLayout" : {
        "applied" : false,
        "edgeSeparation" : 0,
        "implementation" : "Graphviz",
        "nodeSeparation" : 300,
        "rankDirection" : "LeftRight",
        "rankSeparation" : 300,
        "vertices" : false
      },
      "elements" : [ {
        "id" : "1",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "2",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "3",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "4",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "7",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "9",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "10",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "11",
        "x" : 0,
        "y" : 0
      } ],
      "enterpriseBoundaryVisible" : true,
      "key" : "SystemLandscape",
      "order" : 1,
      "relationships" : [ {
        "id" : "53"
      }, {
        "id" : "54"
      }, {
        "id" : "55"
      }, {
        "id" : "56"
      }, {
        "id" : "57"
      }, {
        "id" : "58"
      }, {
        "id" : "61"
      }, {
        "id" : "63"
      }, {
        "id" : "73"
      } ]
    } ]
  }
}