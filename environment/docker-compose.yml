version: "3.2"
services:
  activemq:
    image: symptoma/activemq:5.17.4
    environment:
      ACTIVEMQ_WEBCONSOLE_USE_DEFAULT_ADDRESS: "false"
      ACTIVEMQ_DISALLOW_WEBCONSOLE: "false"
      ACTIVEMQ_USERNAME: ${DEFAULT_USER}
      ACTIVEMQ_PASSWORD: ${DEFAULT_PASSWORD}
      ACTIVEMQ_WEBADMIN_USERNAME: ${DEFAULT_USER}
      ACTIVEMQ_WEBADMIN_PASSWORD: ${DEFAULT_PASSWORD}
    ports:
      - 61616:61616
      - 61614:61614
      - 61613:61613
      - 8161:8161
    healthcheck:
      test: "curl --header 'Origin: origin' --fail -u ${DEFAULT_USER}:${DEFAULT_PASSWORD} -s http://localhost:8161/api/jolokia/exec/org.apache.activemq:type=Broker,brokerName=localhost,service=Health/healthStatus"
      interval: 2s
      timeout: 2s
      retries: 10
      start_period: 20s

  message-forwarder:
    image: message-forwarder
    build:
      dockerfile: packages/message-forwarder/Dockerfile
      context: ..
    environment:
      DESTINATION_TYPE: auto
      CONDUCTOR_URL: http://conductor:4000
      CONDUCTOR_USERNAME: ${DEFAULT_USER}
      CONDUCTOR_PASSWORD: ${DEFAULT_PASSWORD}
      MQ_AUTH: '{"username": "${DEFAULT_USER}", "password": "${DEFAULT_PASSWORD}"}'
      MQ_URL: failover:(ws://activemq:61614)
      TASK_DATA_BUCKET_NAME: conductor-task-data
      S3_AWS_ACCESS_KEY_ID: FAKE
      S3_AWS_SECRET_ACCESS_KEY: FAKE
      S3_ENDPOINT: http://localstack:4566
      S3_REGION: eu-west-2
    depends_on:
      activemq:
        condition: service_healthy
      localstack:
        condition: service_healthy

  postgres:
    build:
      context: ./postgres
      dockerfile: Dockerfile
    restart: always
    environment:
      POSTGRES_PASSWORD: password
      POSTGRES_DB: bichard
      POSTGRES_USER: bichard
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - ./postgres/schema.sql:/docker-entrypoint-initdb.d/init-db.sql
    ports:
      - 5432:5432
    command: postgres -c max_prepared_transactions=100 -c log_statement=all
    healthcheck:
      test: "pg_isready -U $${POSTGRES_USER}"
      interval: 2s
      timeout: 2s
      retries: 10
      start_period: 20s

  db-migrate:
    image: "${LIQUIBASE_IMAGE:-liquibase/liquibase}"
    volumes: ["./postgres/liquibase:/liquibase/changelog"]
    environment:
      LIQUIBASE_PROPERTIES_FILE: "/liquibase/changelog/liquibase.migrations.properties"
      EXIT_AFTER_SCRIPT: "${EXIT_AFTER_SCRIPT:-false}"
    entrypoint: /bin/bash /liquibase/changelog/update.sh
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: "cat ~/completed"
      interval: 2s
      timeout: 2s
      retries: 10
      start_period: 20s

  db-seed:
    image: "${LIQUIBASE_IMAGE:-liquibase/liquibase}"
    volumes: ["./postgres/liquibase:/liquibase/changelog"]
    environment:
      LIQUIBASE_PROPERTIES_FILE: "/liquibase/changelog/liquibase.seeds.properties"
      EXIT_AFTER_SCRIPT: "${EXIT_AFTER_SCRIPT:-false}"
    entrypoint: /bin/bash /liquibase/changelog/update.sh
    depends_on:
      db-migrate:
        condition: service_healthy
    healthcheck:
      test: "cat ~/completed"
      interval: 2s
      timeout: 2s
      retries: 10
      start_period: 20s

  conductor:
    image: conductor
    environment:
      AWS_ACCESS_KEY_ID: FAKE
      AWS_REGION: eu-west-2
      AWS_SECRET_ACCESS_KEY: FAKE
      CJSE_CONDUCTOR_ENABLE_HTTP: "true"
      CJSE_CONDUCTOR_UI_USERNAME: ${DEFAULT_USER}
      CJSE_CONDUCTOR_UI_PASSWORD: ${DEFAULT_PASSWORD}
      CONDUCTOR_EVENTQUEUES_SQS_BATCHSIZE: 10
      CONDUCTOR_EVENTQUEUES_SQS_POLLTIMEDURATION: 100ms
      CONDUCTOR_EVENTQUEUES_SQS_ENDPOINT: http://localstack:4566
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/conductor
      SPRING_DATASOURCE_USERNAME: conductor
      SPRING_DATASOURCE_PASSWORD: conductor
    depends_on:
      postgres:
        condition: service_healthy
      localstack:
        condition: service_healthy
      message-forwarder:
        condition: service_started
      db-seed:
        condition: service_started
    healthcheck:
      test: curl --insecure --fail https://localhost:5000/health
      interval: 2s
      timeout: 2s
      retries: 10
      start_period: 120s
    ports:
      - 5001:5000
      - 5002:4000

  localstack:
    image: localstack/localstack
    ports:
      - 4566:4566
    volumes:
      - "${PWD}/environment/localstack/init:/etc/localstack/init"
    environment:
      SERVICES: "s3,sqs,dynamodb"
      AWS_DEFAULT_REGION: "eu-west-2"
    healthcheck:
      test: 'curl -s localhost:4566/_localstack/init | grep -q ''"READY": true'''
      interval: 2s
      timeout: 2s
      retries: 10
      start_period: 40s

  bichard7-liberty:
    image: bichard7-liberty
    ports:
      - 9443:9443
    environment:
      WLP_LOGGING_MESSAGE_FORMAT: "json"
      WLP_LOGGING_MESSAGE_SOURCE: "message,trace,accessLog,ffdc,audit"
      WLP_LOGGING_CONSOLE_FORMAT: "json"
      WLP_LOGGING_CONSOLE_LOGLEVEL: "info"
      WLP_LOGGING_CONSOLE_SOURCE: "message,trace,accessLog,ffdc,audit"
      WLP_LOGGING_APPS_WRITE_JSON: "true"
      AUDIT_LOGGING_API_URL: http://audit-log-api:7010
      AUDIT_LOGGING_API_KEY: dummy
      DB_USER: ${DEFAULT_USER}
      DB_PASSWORD: ${DEFAULT_PASSWORD}
      DB_HOST: postgres
      DB_SSL: "false"
      DB_SSL_MODE: disable
      LOG_PNC_REQUESTS: "true"
      MQ_CONN_STR: tcp://activemq:61616
      MQ_USER: ${DEFAULT_USER}
      MQ_PASSWORD: ${DEFAULT_PASSWORD}
      LOG_LEVEL: WARN
      BC_PROXY_URL: oltp://beanconnect:31004/BCU31004
      LOGIN_URL: https://localhost:4443/users/login?redirect=/bichard-ui/Authenticate
      TOKEN_SECRET: ${AUTH_JWT_SECRET}
      TAC_SUFFIX: M5B
      ENVIRONMENT: test
      PROCESSING_VALIDATION_PERCENTAGE: 100
      ENABLE_PHASE_1: "${ENABLE_PHASE_1:-false}"
      ENABLE_PHASE_2: "${ENABLE_PHASE_2:-true}"
      ENABLE_PHASE_3: "${ENABLE_PHASE_3:-true}"
      PNC_API_KEY: "${PNC_API_KEY}"
      PHASE_1_RESUBMIT_QUEUE_NAME: "JMS/Phase1ResubmitQueue"
      CONDUCTOR_API_URL: ${CONDUCTOR_API_URL:-http://conductor:4000}
      CONDUCTOR_USERNAME: ${DEFAULT_USER}
      CONDUCTOR_PASSWORD: ${DEFAULT_PASSWORD}
      ENABLE_CORE_PHASE1: ${ENABLE_CORE_PHASE1:-false} # set in boot.sh for npm run all-legacy
    healthcheck:
      test: curl --insecure --fail https://localhost:9443/bichard-ui/Health
      interval: 2s
      timeout: 2s
      retries: 10
      start_period: 180s
    depends_on:
      beanconnect:
        condition: service_healthy
      activemq:
        condition: service_healthy
      postgres:
        condition: service_healthy
      db-seed:
        condition: service_started
      message-forwarder:
        condition: service_started
      audit-log-api:
        condition: service_healthy
      event-handler:
        condition: service_started

  beanconnect:
    image: beanconnect
    platform: linux/amd64
    environment:
      BC_ADMIN_PASSWORD: password
      BC_CONTWIN: 9
      BC_EIS_AEQ: 7707
      BC_EIS_HOST: pnc
      BC_EIS_IS_ADMIN: "false"
      BC_EIS_IS_BS2000: "false"
      BC_EIS_LISTENER_PORT: 30001
      BC_EIS_LPAP: LPBICHCD
      BC_EIS_TSEL: SMP20001
      BC_PROXY_HOSTNAME: LOCAL
      SETUP_HOSTS_FILE: "true"
    hostname: "bc.cjse.org"
    healthcheck:
      test: echo >/dev/tcp/localhost/31004
      interval: 2s
      timeout: 2s
      retries: 10
      start_period: 180s
    depends_on:
      pnc:
        condition: service_healthy

  pnc:
    image: pncemulator
    platform: linux/amd64
    ports:
      - 3000:3000
    healthcheck:
      test: (echo >/dev/tcp/localhost/20001) && (echo >/dev/tcp/localhost/30001)
      interval: 2s
      timeout: 2s
      retries: 10
      start_period: 180s
    restart: on-failure

  user-service:
    image: user-service
    environment:
      BASE_URL: https://localhost:4443/users
      DB_HOST: postgres
      INCORRECT_DELAY: 0
      TOKEN_EXPIRES_IN: 1 week
      TOKEN_ISSUER: Bichard
      TOKEN_SECRET: ${AUTH_JWT_SECRET}
    healthcheck:
      test: (echo >/dev/tcp/localhost/3000) && (echo >/dev/tcp/localhost/443)
      interval: 2s
      timeout: 2s
      retries: 10
      start_period: 20s
    depends_on:
      postgres:
        condition: service_healthy
      db-seed:
        condition: service_started

  ui:
    image: ui
    environment:
      DB_HOST: postgres
      DB_USER: ${DEFAULT_USER}
      DB_PASSWORD: ${DEFAULT_PASSWORD}
      MQ_URL: tcp://activemq:61613
      MQ_USER: ${DEFAULT_USER}
      MQ_PASSWORD: ${DEFAULT_PASSWORD}
      AUDIT_LOG_API_URL: http://audit-log-api:7010
      CONDUCTOR_API_URL: http://conductor:4000
      ENABLE_CORE_PHASE1: ${ENABLE_CORE_PHASE1:-false} # set in boot.sh for npm run all-legacy
    ports:
      - 4080:443
    healthcheck:
      test: curl --insecure --fail -v https://localhost/elb-status
      interval: 2s
      timeout: 2s
      retries: 10
      start_period: 20s
    depends_on:
      postgres:
        condition: service_healthy
      db-seed:
        condition: service_started

  nginx-auth-proxy:
    image: nginx-auth-proxy
    ports:
      - 4443:4443
    environment:
      CJSE_NGINX_APP_DOMAIN: bichard7-liberty:9443
      CJSE_NGINX_AUDITLOGGING_DOMAIN: nginx-auth-proxy:4443/elb-status
      CJSE_NGINX_BICHARDBACKEND_DOMAIN: bichard7-liberty:9443
      CJSE_NGINX_PORT_HTTPS: 4443
      CJSE_NGINX_PROXYSSLVERIFY: "off"
      CJSE_NGINX_STATICSERVICE_DOMAIN: nginx-auth-proxy:4443/elb-status
      CJSE_NGINX_UI_DOMAIN: ui
      CJSE_NGINX_USERSERVICE_DOMAIN: user-service
    healthcheck:
      test: curl --insecure --fail https://localhost:4443/elb-status
      interval: 2s
      timeout: 2s
      retries: 10
      start_period: 20s
    depends_on:
      bichard7-liberty:
        condition: service_healthy
      user-service:
        condition: service_healthy
      ui:
        condition: service_healthy

  audit-log-api:
    image: audit-log-api
    ports:
      - 7010:7010
    healthcheck:
      test: curl --fail http://localhost:7010/health
      interval: 2s
      timeout: 2s
      retries: 10
    environment:
      PORT: 7010
      AWS_URL: http://localstack:4566
      AWS_REGION: eu-west-2
      DYNAMO_REGION: eu-west-2
      AUDIT_LOG_TABLE_NAME: auditLogTable
      AUDIT_LOG_EVENTS_TABLE_NAME: auditLogEventsTable
      MQ_USER: ${DEFAULT_USER}
      MQ_PASSWORD: ${DEFAULT_PASSWORD}
      MQ_URL: tcp://activemq:61613
      INTERNAL_INCOMING_MESSAGES_BUCKET: internalIncomingBucket
      AUDIT_LOG_EVENTS_BUCKET: auditLogEventsBucket
      S3_URL: http://localstack:4566
      S3_REGION: eu-west-2
      API_URL: http://localhost:7010
      API_KEY: dummy
      S3_AWS_ACCESS_KEY_ID: S3RVER
      S3_AWS_SECRET_ACCESS_KEY: S3RVER
      DYNAMO_AWS_ACCESS_KEY_ID: S3RVER
      DYNAMO_AWS_SECRET_ACCESS_KEY: S3RVER
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: ${DEFAULT_USER}
      DB_PASSWORD: ${DEFAULT_PASSWORD}
      DB_SSL: "false"
    depends_on:
      localstack:
        condition: service_healthy

  event-handler:
    image: event-handler
    environment:
      API_URL: http://audit-log-api:7010
      API_KEY: dummy
      MQ_USER: ${DEFAULT_USER}
      MQ_PASSWORD: ${DEFAULT_PASSWORD}
      MQ_URL: ws://activemq:61614
    depends_on:
      localstack:
        condition: service_healthy
