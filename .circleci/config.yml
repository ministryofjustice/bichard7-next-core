version: 2.1

commands:
  fetch_docker_image:
    parameters:
      image:
        type: string
    steps:
      - run:
          name: Fetch the <<parameters.image>> image
          command: bash scripts/fetch-docker-image.sh <<parameters.image>>

  install_core:
    description: Install the node dependencies for core
    steps:
      - run:
          name: Hash package-lock.json
          command: bash .circleci/scripts/hash-package-lock.sh
      - restore_cache:
          name: Load node_modules from the cache if they haven't changed
          keys:
            - v1-npm-deps-{{ checksum "package-lock.json.md5" }}
            - v1-npm-deps-
      - run:
          name: Install npm dependencies
          command: npm i
      - save_cache:
          key: v1-npm-deps-{{ checksum "package-lock.json.md5" }}
          paths: node_modules

  install_api:
    description: Install the node dependencies for API
    steps:
      - run:
          name: Hash package-lock.json
          command: bash .circleci/scripts/hash-package-lock.sh
      - restore_cache:
          name: Load node_modules from the cache if they haven't changed
          keys:
            - v1-npm-deps-{{ checksum "api/package-lock.json.md5" }}
            - v1-npm-deps-
      - run:
          name: Install npm dependencies
          command: cd api && npm i
      - save_cache:
          key: v1-npm-deps-{{ checksum "api/package-lock.json.md5" }}
          paths: node_modules

  clone_bichard_repo:
    description: Check out the bichard7-next repo
    steps:
      - add_ssh_keys:
          fingerprints:
            - fa:99:cf:93:ab:74:30:81:b5:b8:d3:c6:08:4e:0e:1c
      - run:
          name: Clone Bichard7 Next
          command: git clone --depth 1 git@github.com:ministryofjustice/bichard7-next.git ~/bichard7-next

  run_postgres:
    description: Run the PostgreSQL database
    steps:
      - run:
          name: Spin up the PostgreSQL database
          working_directory: ~/bichard7-next
          command: make run-pg

jobs:
  lint:
    machine:
      image: ubuntu-2204:2022.10.2
    resource_class: xlarge
    working_directory: ~
    steps:
      - checkout
      - install_core
      - run:
          name: Check the code for linting errors
          command: npm run lint

  build_core:
    machine:
      image: ubuntu-2204:2022.10.2
    resource_class: xlarge
    working_directory: ~
    steps:
      - checkout
      - install_core
      - run:
          name: Build the core
          command: npm run build
      - persist_to_workspace:
          root: .
          paths: build

  build_api:
    machine:
      image: ubuntu-2204:2022.10.2
    resource_class: xlarge
    working_directory: ~
    steps:
      - checkout
      - install_api
      - run:
          name: Build the API
          command: cd api && npm run build
      - persist_to_workspace:
          root: ./api
          paths: build

  test:
    machine:
      image: ubuntu-2204:current
      docker_layer_caching: true
    working_directory: ~
    steps:
      - checkout
      - install_core
      - attach_workspace:
          at: .
      - run:
          name: Run PostgreSQL
          command: npm run postgres
      - run:
          name: Run ActiveMQ
          command: npm run activemq
      - run:
          name: Install Nodejs version in .nvmrc
          command: nvm install
      - run:
          name: Run unit tests against core code
          command: nvm use && npm run test:unit
      - run:
          name: Run integration tests against core code
          command: nvm use && npm run test:integration

  comparison_test:
    machine:
      image: ubuntu-2204:current
      docker_layer_caching: true
    working_directory: ~
    steps:
      - checkout
      - install_core
      - attach_workspace:
          at: .
      - run:
          name: Run integration tests against core code
          command: npm run test:compare

  characterisation_test:
    docker:
      - image: cimg/node:16.13.1
    resource_class: xlarge
    working_directory: ~
    steps:
      - checkout
      - install_core
      - attach_workspace:
          at: .
      - run:
          name: Checkout the tests repo
          command: git clone --depth 1 https://github.com/ministryofjustice/bichard7-next-tests.git ~/bichard7-next-tests
      - run:
          name: Start the test server in the background
          command: npm run test:server
          background: true
      - run:
          name: Wait for Core
          # The version of wait-port is pinned here because version 1.0.0
          # has a breaking change that makes it die when the port is not open
          command: npx -y wait-port@0.3.1 6000
      - run:
          name: Create a hash of the package lock
          command: md5sum ~/bichard7-next-tests/package-lock.json > ~/bichard7-next-tests/package-lock.json.md5
      - restore_cache:
          name: Load node_modules from the cache if they haven't changed
          keys:
            - test-deps-{{ checksum "~/bichard7-next-tests/package-lock.json.md5" }}
      - run:
          name: NPM install the tests repo
          command: cd ~/bichard7-next-tests && npm i
      - save_cache:
          key: test-deps-{{ checksum "~/bichard7-next-tests/package-lock.json.md5" }}
          paths: ~/bichard7-next-tests/node_modules
      - run:
          name: Run tests against core code
          command: cd ~/bichard7-next-tests && npm run test:characterisation

  conductor_test:
    machine:
      image: ubuntu-2204:current
      docker_layer_caching: true
    resource_class: xlarge
    working_directory: ~
    steps:
      - checkout
      - install_core
      - attach_workspace:
          at: .
      - fetch_docker_image:
          image: conductor
      - fetch_docker_image:
          image: nodejs
      - run:
          name: Boot Conductor infrastructure
          command: npm run conductor-no-worker
      - run:
          name: Set up Conductor
          command: npm run conductor-setup
      - run:
          name: Run the worker
          command: npm run conductor-worker
          background: true
      - run:
          name: Test the workflows
          command: npm run test:conductor

  e2e_test:
    machine:
      image: ubuntu-2204:current
      docker_layer_caching: true
    resource_class: xlarge
    working_directory: ~
    parallelism: 10
    steps:
      - checkout
      - install_core
      - attach_workspace:
          at: .
      - fetch_docker_image:
          image: nodejs
      - run:
          name: Build message forwarder image
          command: docker-compose -f environment/docker-compose.yml build message-forwarder
      - run:
          name: Run the infrastructure
          command: npm run all-no-worker
      - run:
          name: Run the worker
          command: npm run conductor-worker
          background: true
      - run:
          name: Run e2e tests against core code
          command: TOTAL_CHUNKS=$CIRCLE_NODE_TOTAL CHUNK_NUMBER=$CIRCLE_NODE_INDEX npm run test:e2e:ci

  test_api:
    machine:
      image: ubuntu-2204:current
      docker_layer_caching: true
    working_directory: ~
    steps:
      - checkout
      - install_api
      - attach_workspace:
          at: .
      - run:
          name: Install Nodejs version in .nvmrc
          command: nvm install
      - clone_bichard_repo
      - run_postgres
      - run:
          name: Run unit tests against API code
          command: nvm use && cd api && npm run test:api

workflows:
  version: 2
  build-and-test:
    jobs:
      - lint
      - build_core:
          requires:
            - lint
      - build_api:
          requires:
            - lint
      - test:
          requires:
            - build_core
      - characterisation_test:
          requires:
            - build_core
      - comparison_test:
          requires:
            - build_core
      - conductor_test:
          requires:
            - build_core
      - e2e_test:
          requires:
            - build_core
      - test_api:
          requires:
            - build_api
